#
# Makefile for the linux kernel.
#

ccflags-y := -D__LINUX__
asflags-y := -D__LINUX__

# Common support
obj-y := board-generic.o io.o irq.o local_timer.o serial.o soc-timer.o clock.o plat.o device.o mcuctrl.o chipver.o otp.o lowpower.o
obj-y += memtest.o thermal.o regtest.o sist-common.o ringo.o sist-soc.o sist-a9.o
obj-y += umac.o umac_proc.o

# Board specific support
obj-$(CONFIG_SIGMA_SOC_SX6)		+= board-sx6.o
obj-$(CONFIG_SIGMA_SOC_SX7)		+= board-sx7.o
obj-$(CONFIG_SIGMA_SOC_UXLB)		+= board-uxl.o

# SMP support
obj-$(CONFIG_SMP)			+= smp.o
obj-$(CONFIG_SMP)			+= sigma-headsmp.o
obj-$(CONFIG_HOTPLUG_CPU)		+= hotplug.o

obj-$(CONFIG_SIGMA_CACHE_L2X0)		+= l2c.o 
obj-$(CONFIG_SIGMA_SMC)			+= sigma-smc.o smc.o

# Drivers
obj-$(CONFIG_SIGMA_TRIX_ENET)		+= ethernet.o

# Power Management
obj-$(CONFIG_CPU_FREQ)          += cpufreq.o
obj-$(CONFIG_PM)                += pm.o sleep.o
obj-$(CONFIG_PM_CRC)  		+= pm-check.o 
ifeq ($(CONFIG_PM_DEBUG),y)
CFLAGS_pm.o += -DDEBUG
endif

# DCSN Driver
obj-$(CONFIG_SIGMA_DCSN)	+= dcsn.o

plus_sec := $(call as-instr,.arch_extension sec,+sec)
AFLAGS_sigma-headsmp.o			:=-Wa,-march=armv7-a$(plus_sec)
AFLAGS_sigma-smc.o			:=-Wa,-march=armv7-a$(plus_sec)
AFLAGS_sleep.o	                        :=-Wa,-march=armv7-a$(plus_sec)

# Default sed regexp - multiline due to syntax constraints
define sed-y
	"/^->/{s:->#\(.*\):/* \1 */:; \
	s:^->\([^ ]*\) [\$$#]*\([-0-9]*\) \(.*\):#define \1 \2 /* \3 */:; \
	s:^->\([^ ]*\) [\$$#]*\([^ ]*\) \(.*\):#define \1 \2 /* \3 */:; \
	s:->::; p;}"
endef

# Use filechk to avoid rebuilds when a header changes, but the resulting file
# does not
define filechk_offsets
	(set -e; \
	 echo "#ifndef $2"; \
	 echo "#define $2"; \
	 echo "/*"; \
	 echo " * DO NOT MODIFY."; \
	 echo " *"; \
	 echo " * This file was generated by Kbuild"; \
	 echo " */"; \
	 echo ""; \
	 sed -ne $(sed-y); \
	 echo ""; \
	 echo "#endif" )
endef

# Files generated that shall be removed upon make clean
clean-files := asm-offsets.s asm-offsets.h

$(obj)/sleep.o: $(obj)/asm-offsets.h

$(obj)/asm-offsets.s: $(src)/asm-offsets.c FORCE
	$(Q)mkdir -p $(dir $@)
	$(call if_changed_dep,cc_s_c)

$(obj)/asm-offsets.h: $(obj)/asm-offsets.s FORCE
	$(call filechk,offsets,__TRIX_ASM_OFFSETS_H__)

